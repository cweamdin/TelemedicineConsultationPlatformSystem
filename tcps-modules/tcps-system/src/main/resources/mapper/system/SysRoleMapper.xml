<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tcps.system.mapper.SysRoleMapper">

    <resultMap type="SysRole" id="SysRoleResult">
        <id property="roleId" column="role_id" jdbcType="BIGINT"/>
        <result property="officeId" column="office_id" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleEnName" column="role_enname" jdbcType="VARCHAR"/>
        <result property="menuCheckStrictly" column="menu_check_strictly" jdbcType="TINYINT"/>
        <result property="officeCheckStrictly" column="office_check_strictly" jdbcType="TINYINT"/>
        <result property="roleKey" column="role_key" jdbcType="VARCHAR"/>
        <result property="roleSort" column="role_sort" jdbcType="INTEGER"/>
        <result property="roleType" column="role_type" jdbcType="VARCHAR"/>
        <result property="dataScope" column="data_scope" jdbcType="CHAR"/>
        <result property="sys" column="sys" jdbcType="CHAR"/>
        <result property="status" column="status" jdbcType="CHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remarks" column="remarks" jdbcType="VARCHAR"/>
        <result property="delFlag" column="del_flag" jdbcType="CHAR"/>
        <result property="accountId" column="account_id" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="selectRoleVo">
        select distinct r.role_id,
                        r.office_id,
                        r.role_name,
                        r.role_enname,
                        r.menu_check_strictly,
                        r.office_check_strictly,
                        r.role_key,
                        r.role_sort,
                        r.role_type,
                        r.data_scope,
                        r.sys,
                        r.status,
                        r.create_by,
                        r.create_time,
                        r.update_by,
                        r.update_time,
                        r.remarks,
                        r.del_flag,
                        r.account_id
        from sys_role r
                 left join sys_user_role sur on sur.role_id = r.role_id
                 left join sys_user u on u.user_id = sur.user_id
                 left join sys_dept d on u.dept_id = d.dept_id
    </sql>

    <select id="selectPageRoleList" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        ${ew.getCustomSqlSegment}
    </select>

    <select id="selectRoleList" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        ${ew.getCustomSqlSegment}
    </select>

    <select id="selectRolePermissionByUserId" parameterType="Long" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        WHERE r.del_flag = '0' and sur.user_id = #{userId}
    </select>

    <select id="selectRoleListByUserId" parameterType="Long" resultType="Long">
        select r.role_id
        from sys_role r
                 left join sys_user_role sur on sur.role_id = r.role_id
                 left join sys_user u on u.user_id = sur.user_id
        where u.user_id = #{userId}
    </select>

    <select id="selectRolesByUserName" parameterType="String" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        WHERE r.del_flag = '0' and u.user_name = #{userName}
    </select>

</mapper>
